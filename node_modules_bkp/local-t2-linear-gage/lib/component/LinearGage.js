"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var d3_linear_gage_1 = require("../lib/d3-linear-gage");
var LinearaGauge = (function (_super) {
    __extends(LinearaGauge, _super);
    function LinearaGauge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LinearaGauge.prototype.componentDidMount = function () {
        var el = this.refs['assessmentGauge'];
        d3_linear_gage_1.default.create(el, {
            width: '100%',
            height: '300px'
        }, this.getChartState());
    };
    LinearaGauge.prototype.componentDidUpdate = function () {
        var el = this.refs['assessmentGauge'];
        d3_linear_gage_1.default.update(el, this.getChartState());
    };
    LinearaGauge.prototype.getChartState = function () {
        var width = window.innerWidth
            || document.documentElement.clientWidth
            || document.body.clientWidth || 500;
        return {
            data: this.props.result,
            domain: { x: [this.props.minScore, this.props.maxScore], y: [0, 100] },
            width: this.props.width || width - 20,
            middleScore: this.props.middleScore,
            highIsGood: this.props.highIsGood
        };
    };
    LinearaGauge.prototype.componentWillUnmount = function () {
        var el = this.refs['assessmentGauge'];
        d3_linear_gage_1.default.destroy(el);
    };
    LinearaGauge.prototype.render = function () {
        var width = this.props.width;
        return (React.createElement("div", { style: { width: width, margin: 'auto auto auto auto' }, ref: "assessmentGauge" },
            React.createElement("svg", null)));
    };
    return LinearaGauge;
}(React.Component));
exports.default = LinearaGauge;
//# sourceMappingURL=LinearGage.js.map